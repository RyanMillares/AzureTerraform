import { useTable, useGlobalFilter, usePagination } from 'react-table'
const {
    getTableProps,
    getTableBodyProps,
    headerGroups,
    page,
    nextPage,
    previousPage,
    canNextPage,
    canPreviousPage,
    pageOptions,
    gotoPage,
    pageCount,
    prepareRow,
    state,
    setGlobalFilter,
  } = useTable({
    columns,
    data
  }, useGlobalFilter, usePagination)

  const { pageIndex, globalFilter } = state
  function secondPage(count, index) {
    if (count < 6) {
      return 2
    }
    else {
      if (index > 2) {
        if (count - index > 2) {
          return index
        }
        else {
          return count - 3
        }
      }
      else {
        return 2
      }
    }
  }

  function thirdPage(count, index) {
    if (count < 6) {
      return 3
    }
    else {
      if (index > 2) {
        if (count - index > 2) {
          return index + 1
        }
        else {
          return count - 2
        }
      }
      else {
        return 3
      }
    }
  }

  function fourthPage(count, index) {
    if (count < 6) {
      return 4
    }
    else {
      if (index > 2) {
        if (count - index > 2) {
          return index + 2
        }
        else {
          return count - 1
        }
      }
      else {
        return 4
      }
    }
  }
<Row className="justify-content-md-center">

        <Col md="auto">
          <Pagination>
            <Pagination.Item onClick={() => previousPage()} disabled={!canPreviousPage}><b>{'<'}</b></Pagination.Item>



            <Pagination.Item onClick={() => gotoPage(0)} disabled={!canPreviousPage}>1</Pagination.Item>

            { // 2nd
              (pageCount > 2) && (
                <Pagination.Item onClick={() => gotoPage(secondPage(pageCount, pageIndex) - 1)} disabled={secondPage(pageCount, pageIndex) - 1 == pageIndex}>{secondPage(pageCount, pageIndex)}</Pagination.Item>
              )
            }
            { // 3rd
              (pageCount > 3) && (
                <Pagination.Item onClick={() => gotoPage(thirdPage(pageCount, pageIndex) - 1)} disabled={thirdPage(pageCount, pageIndex) - 1 == pageIndex}>{thirdPage(pageCount, pageIndex)}</Pagination.Item>
              )
            }

            { // 4th
              (pageCount > 4) && (
                <Pagination.Item onClick={() => gotoPage(fourthPage(pageCount, pageIndex) - 1)} disabled={fourthPage(pageCount, pageIndex) - 1 == pageIndex}>{fourthPage(pageCount, pageIndex)}</Pagination.Item>

              )
            }


            { // GO TO LAST
              (pageCount > 1) && (
                <Pagination.Item onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>{pageOptions.length}</Pagination.Item>

              )
            }

            <Pagination.Item onClick={() => nextPage()} disabled={!canNextPage}><b>{'>'}</b></Pagination.Item>

          </Pagination>

        </Col>
      </Row>

Hey Jordan!
 
Hope your day is going well! My name is Ryan Millares and I am a full-stack developer at Avanade. I saw through MyScheduling that you are looking for an Front End Developer (4709584) for the Bionic Project at Accenture Acquisitions and I wanted to reach out to you to explain why I think I’m the best fit for the role as a follow up to my application on MyScheduling. 
 
I have a strong understanding of combining modern JavaScript frameworks such as React and Angular, as well as over six years of experience with HTML and CSS, in building out the UI for numerous web applications, ranging from employee-management portals, insurance quote trackers, Azure Cost calculators, real time chatting apps, and more. In my most recent project at the Gates Foundation, I enhanced the UI of their employee-management portal application with data input screens, popup modals, and interactive, paginated data grids. I created backend API endpoints in ASP.NET to enable complex querying, editing, and deletion of data through SQL scripts on the site database to connect it to the frontend. I also have experience writing stored procedures, functions, and triggers in PostgreSQL to support critical features on the backend of web applications.
 
I put a strong emphasis on approaching my work from as many angles as possible and am passionate about delivering the ideal user experience for all personas. I strive to achieve the ideal vision of a product held by the project lead, and I do this by tackling problems with software solutions that can take on the worst that a QA tester could throw at it without a dent. In several past projects, I have been in charge of implementing the UI for numerous critical features, and performed rigorous edge-case handling to check for various issues such as insufficient permissions, data persistence, detecting user authentication, ensuring users proceed through the intended flow. I strongly adhere to agile integration in all of my projects to ensure the efficient handling of all incoming user stories. 
 
Due to my remote flexibility, I am comfortable working outside my typical hours to accommodate other time zones. I have attached my one-pager for your convenience, and have linked my Digital CV, so you may view my previous experiences in more detail. Feel free to reach out to me on Teams or Outlook any time if you have any questions, and I’ll respond ASAP during US working hours! Thanks for your consideration, and I look forward to hearing back from you.
 
Online CV: View Worker - Ryan Millares - Workday (myworkday.com)
 
Sincerely,
Ryan Millares
